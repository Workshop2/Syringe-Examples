<?xml version="1.0" encoding="utf-8"?>
<tests>
	<variables>
		<variable name="baseurl" environment="Development">http://www.bing.com</variable>
	</variables>
	<test description="Search for Cows" url="http://www.bing.com/search" method="GET" expectedhttpstatuscode="200">
		<headers />
		<postbody />
		<capturedvariables>
			<variable name="test">&lt;this should work&gt;</variable>
			<variable name="entityTitleVar">&lt;h2 class=" b_entityTitle"&gt;(.*?)&lt;/h2&gt;</variable>
		</capturedvariables>
		<assertions>
			<assertion description="blah" type="positive" method="csquery">.b_algo</assertion>
		</assertions>
		<beforeExecuteScript><![CDATA[Request.AddQueryParameter("q","cows");]]></beforeExecuteScript>
	</test>
	<test description="Search for cattle" url="{baseurl}/search?q={entityTitleVar}" method="GET" expectedhttpstatuscode="200">
		<headers />
		<postbody />
		<capturedvariables />
		<assertions>
			<assertion description="Cattle from wikipedia exists on the page" type="positive" method="regex">https://en.wikipedia.org/wiki/Cattle</assertion>
		</assertions>
		<beforeExecuteScript />
	</test>
	<test description="Search for Geese" url="{baseurl}/search?q=geese&amp;something={entityTitleVar}" method="POST" expectedhttpstatuscode="200">
		<headers />
		<postbody />
		<capturedvariables />
		<assertions>
			<assertion description="Text exists" type="positive" method="regex">Geese</assertion>
		</assertions>
		<beforeExecuteScript />
	</test>
	<test description="Search for Fresh air" url="{baseurl}/search?q=fresh air" method="get" expectedhttpstatuscode="200">
		<headers />
		<postbody />
		<capturedvariables />
		<assertions>
			<assertion description="Text doesn't exist" type="negative" method="regex">Google</assertion>
		</assertions>
		<beforeExecuteScript />
	</test>
	<test description="Search for Monkeys" url="{baseurl}/search?q=monkeys" method="post" expectedhttpstatuscode="200">
		<headers />
		<postbody />
		<capturedvariables />
		<assertions>
			<assertion description="Text doesn't exist" type="negative" method="regex">Google</assertion>
		</assertions>
		<beforeExecuteScript />
	</test>
</tests>